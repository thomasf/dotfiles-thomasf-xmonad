#!/bin/bash

# Script to support remote script development.

projectsroot="/Users/${USER}/Music/Ableton/projects/"
project="${projectsroot}/scriptdev Project/scriptdev.als"
lver="11.0"
log="/Users/${USER}/Library/Preferences/Ableton/Live ${lver}/log.txt"
scriptsPath="/Applications/Ableton Live 11 Suite.app/Contents/App-Resources/MIDI Remote Scripts"
cleanScripts="launchpad95 launchpad95hk fs2 beatstep twister twister2 nanocontrol Livid_DS1 Livid_DS1hk"

waitForLiveToExit() {
  while $(pgrep Live >/dev/null); do
    sleep 0.1
  done
}


quitLive() {
  /usr/bin/osascript << EOF
on is_running(appName)
  tell application "System Events" to (name of processes) contains appName
end is_running

if is_running("Live") then
  tell application "Live" to activate
  ignoring application responses
    tell application "Live" to quit
  end ignoring

  delay 1.5
  if is_running("Live") then
    tell application "Live" to activate
    tell application "System Events" to keystroke "o" -- Ok
    tell application "System Events" to keystroke "d" -- Don't save
  end if
end if
EOF
  waitForLiveToExit
  echo ""
  echo "---------------- LIVE IS SHUT DOWN ----------- "
  echo ""
}

hideLive() {
  /usr/bin/osascript << EOF
tell application "Finder"
  set visible of process "Live" to false
end tell
EOF
}
export -f hideLive


startLive() {
  for S in $cleanScripts; do
    rm -f "$scriptsPath/$S/*.pyc"
  done
  echo ""
  echo "---------------- LIVE IS STARTING ----------- "
  echo ""
  /Applications/Ableton\ Live\ 11\ Suite.app/Contents/MacOS/Live "${project}" &
}


sigintHandler() {
  echo "Exiting live restart script..."
  quitLive
  kill $(jobs -p)
  exit $?
}
trap sigintHandler SIGINT


quitLive
while true; do
  tail -f "${log}" | grep RemoteScript &
  startLive
  (
    sleep 1
    hideLive
  ) &
  read
  quitLive
  kill $(jobs -p)
done
